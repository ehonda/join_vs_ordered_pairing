<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JoinVsOrderedPairing</name>
    </assembly>
    <members>
        <member name="M:JoinVsOrderedPairing.Extensions.IEnumerableExtensions.PairSelectOnOrderedInputs``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
            <summary>
            Pairs and projects elements in <paramref name="left"/> with matching elements
            in <paramref name="right"/>, by comparison on keys extracted with
            <paramref name="leftKeySelector"/> and <paramref name="rightKeySelector"/>.
            Inputs must be sorted on these keys. The result elements are retrieved by
            projecting the paired up elements via <paramref name="resultSelector"/>.
            </summary>
            <typeparam name="Left">Type of left elements.</typeparam>
            <typeparam name="Right">Type of right elements.</typeparam>
            <typeparam name="Key">
                Type of keys to compare, must implement <see cref="T:System.IComparable`1"/>.
            </typeparam>
            <typeparam name="Result">Type of result elements.</typeparam>
            <param name="left"><typeparamref name="Left"/> elements.</param>
            <param name="right"><typeparamref name="Right"/> elements.</param>
            <param name="leftKeySelector">
                Function to project elements of type <typeparamref name="Left"/>
                onto their corresponding <typeparamref name="Key"/>.
            </param>
            <param name="rightKeySelector">
                Function to project elements of type <typeparamref name="Right"/>
                onto their corresponding <typeparamref name="Key"/>.
            </param>
            <param name="resultSelector">
                Function to project paired elements of type
                (<typeparamref name="Left"/>, <typeparamref name="Right"/>)
                onto a result element of type <typeparamref name="Result"/>.
            </param>
            <returns>
                The <typeparamref name="Result"/> elements retrieved by
                projecting paired up elements from the input sequences.
            </returns>
        </member>
        <member name="M:JoinVsOrderedPairing.Extensions.IListExtensions.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            This is an implementation of the Fisher-Yates shuffle. For more
            information please consult the following links
            <list type="bullet">
            <item>
                https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm
            </item>
            <item>https://stackoverflow.com/q/273313</item>
            </list>
            </summary>
            <typeparam name="T">Type of elements.</typeparam>
            <param name="elements">Elements to shuffle.</param>
        </member>
    </members>
</doc>
